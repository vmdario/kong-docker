version: '2.2'

volumes:
  kong_data: {}
  konga_data: {}

networks:
  kong_network:

services:
  kong:
    build:
      context: .
    user: ${KONG_USER:-root}
    networks:
      - kong_network
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    environment:
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: ${KONG_PG_HOST:-kong_db}
      KONG_PG_PORT: ${KONG_PG_PORT:-5432}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong12345}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ERROR_LOG: /dev/stdout
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_LOG_LEVEL: info
    depends_on:
      kong_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 5
  kong_db:
    image: postgres:12.1
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong12345}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 5
    stdin_open: true
    tty: true
    ports:
      - 5432:5432
    networks:
      - kong_network
    volumes:
      - kong_data:/var/lib/postgres/data
  mongo:
    image: mongo:4.2.2-bionic
    ports: 
      - 27017:27017
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - kong_network
    volumes:
      - konga_data:/data/db
  konga:
    image: pantsel/konga:latest
    ports:
      - 1337:1337
    environment:
      DB_ADAPTER: mongo
      DB_DATABASE: konga
      DB_HOST: mongo
      NODE_ENV: production
    networks:
      - kong_network
    restart: on-failure